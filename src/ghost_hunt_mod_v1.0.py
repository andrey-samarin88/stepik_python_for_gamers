# –°–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –≤–µ—Ä—Å–∏–∏ mod_v1.0:
# 1. –ò–≥—Ä–æ–∫ –∏—Å—Å–ª–µ–¥—É–µ—Ç –¥–æ–º - –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è –∏–∑ –∫–æ–º–Ω–∞—Ç—ã –≤ –∫–æ–º–Ω–∞—Ç—É –≤ –ø–æ–∏—Å–∫–∞—Ö —É–ª–∏–∫ +
# 1.1 –í –Ω–∞—á–∞–ª–µ –∫–∞—Ç–∫–∏ —Å–ª—É—á–∞–π–Ω–æ –≤—ã–±—Ä–∞–µ—Ç—Å—è –æ–¥–∏–Ω –ø—Ä–∏–∑—Ä–∞–∫ +
# 1.2 –£–ª–∏–∫–∏ —Ä–∞—Å–∫–∏–¥–∞–Ω—ã –ø–æ –∫–æ–º–Ω–∞—Ç–∞–º —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º, –µ—Å–ª–∏ –≤ –∫–æ–º–Ω–∞—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç/–∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —É–ª–∏–∫–∏, —Ç–æ —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º –∏–≥—Ä–æ–∫—É –ø–æ—Å–ª–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∫–æ–º–Ω–∞—Ç—ã +
# 1.3 –¥–æ–±–∞–≤–ª–µ–Ω –ø.5 - –∏–∑—É—á–∏—Ç—å —ç–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏—é –æ –ø—Ä–∏–∑—Ä–∞–∫–∞—Ö +
# 1.4 –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ç–∏–ø –ø—Ä–∏–∑—Ä–∞–∫–∞ –º–æ–∂–Ω–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –Ω–æ –æ–¥–∏–Ω —Ä–∞–∑, —Ç–∞–∫ –∂–µ –∫–∞–∫ –ø–∏—Ç—å –º–µ—Ç–∏–ª–æ–≤—ã–π —Å–ø–∏—Ä—Ç +

# 2. –ò–≥—Ä–æ–∫ –∏—â–µ—Ç —É–∫—Ä—ã—Ç–∏–µ
# 2.1 –ü—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ —Ä–∞—Å—Å—É–¥–∫–∞ < 25 –æ–ø–æ–≤–µ—Å—Ç–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –æ —Ç–æ–º, —á—Ç–æ –ø—Ä–∏–∑—Ä–∞–∫ –Ω–∞—á–∞–ª –æ—Ö–æ—Ç—É +
# 2.2 –ò–≥—Ä–æ–∫ –Ω–µ –∑–Ω–∞–µ—Ç –≤ –∫–∞–∫–∏—Ö –∫–æ–º–Ω–∞—Ç–∞—Ö –µ—Å—Ç—å —É–∫—Ä—ã—Ç–∏–µ, –∏ –∏–º–µ–µ—Ç 50% —à–∞–Ω—Å –Ω–∞ —É—Å–ø–µ—à–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —É–∫—Ä—ã—Ç–∏—è –µ—Å–ª–∏ –ø—Ä–∏–∑—Ä–∞–∫ –Ω–∞—á–∞–ª –æ—Ö–æ—Ç—É +
# 2.3 –ù–µ–ª—å–∑—è –ø—Ä—è—Ç–∞—Ç—å—Å—è –≤ –æ–¥–Ω–æ–º –∏ —Ç–æ–º –∂–µ —É–∫—Ä—ã—Ç–∏–∏ 2 —Ä–∞–∑–∞ –ø–æ–¥—Ä—è–¥

import random

#random.seed(int(input()))  #—É–¥–∞–ª–∏—Ç—å –ø–µ—Ä–µ–¥ –≤—ã–ø—É—Å–∫–æ–º –≤ –ø—Ä–æ–¥–∞–∫—à–∏–Ω
rooms = ["–ì–æ—Å—Ç–∏–Ω–∞—è", "–ö—É—Ö–Ω—è", "–°–ø–∞–ª—å–Ω—è", "–í–∞–Ω–Ω–∞—è", "–ü–æ–¥–≤–∞–ª"]
#evidences_all = ["–ú–∏–Ω—É—Å–æ–≤–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "–£–ª—å—Ç—Ä–∞—Ñ–∏–æ–ª–µ—Ç",
 #                "–î–µ—Ç–µ–∫—Ç–æ—Ä –≠–ú–ü (—É—Ä. 5)", "–†–∞–¥–∏–æ–ø—Ä–∏—ë–º–Ω–∏–∫",
  #               "–ó–∞–ø–∏—Å–∏ –≤ –±–ª–æ–∫–Ω–æ—Ç–µ", "–õ–∞–∑–µ—Ä–Ω—ã–π –ø—Ä–æ–µ–∫—Ç–æ—Ä",
   #              "–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –æ–≥–æ–Ω—ë–∫"]
ghosts = ["–î–∂–∏–Ω", "–ú–æ—Ä–æ–π", "–ü–æ–ª—Ç–µ—Ä–≥–µ–π—Å—Ç", "–ë–∞–Ω—à–∏", "–î–µ–º–æ–Ω"]
ghost_evidences = [
    ["–ú–∏–Ω—É—Å–æ–≤–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞", "–£–ª—å—Ç—Ä–∞—Ñ–∏–æ–ª–µ—Ç", "–î–µ—Ç–µ–∫—Ç–æ—Ä –≠–ú–ü (—É—Ä. 5)"],   # –î–∂–∏–Ω
    ["–†–∞–¥–∏–æ–ø—Ä–∏—ë–º–Ω–∏–∫", "–ó–∞–ø–∏—Å–∏ –≤ –±–ª–æ–∫–Ω–æ—Ç–µ", "–ú–∏–Ω—É—Å–æ–≤–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞"],     # –ú–æ—Ä–æ–π
    ["–†–∞–¥–∏–æ–ø—Ä–∏—ë–º–Ω–∏–∫", "–£–ª—å—Ç—Ä–∞—Ñ–∏–æ–ª–µ—Ç", "–ó–∞–ø–∏—Å–∏ –≤ –±–ª–æ–∫–Ω–æ—Ç–µ"],              # –ü–æ–ª—Ç–µ—Ä–≥–µ–π—Å—Ç
    ["–õ–∞–∑–µ—Ä–Ω—ã–π –ø—Ä–æ–µ–∫—Ç–æ—Ä", "–£–ª—å—Ç—Ä–∞—Ñ–∏–æ–ª–µ—Ç", "–ü—Ä–∏–∑—Ä–∞—á–Ω—ã–π –æ–≥–æ–Ω—ë–∫"],          # –ë–∞–Ω—à–∏
    ["–£–ª—å—Ç—Ä–∞—Ñ–∏–æ–ª–µ—Ç", "–ó–∞–ø–∏—Å–∏ –≤ –±–ª–æ–∫–Ω–æ—Ç–µ", "–ú–∏–Ω—É—Å–æ–≤–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞"]       # –î–µ–º–æ–Ω
]

events = ['1 ‚Äî –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É', '2 ‚Äî –°–ø—Ä—è—Ç–∞—Ç—å—Å—è', '3 ‚Äî –ü–µ—Ä–µ–π—Ç–∏ –≤ –¥—Ä—É–≥—É—é –∫–æ–º–Ω–∞—Ç—É', '4 ‚Äî –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø –ø—Ä–∏–∑—Ä–∞–∫–∞', '5 ‚Äî –ò–∑—É—á–∏—Ç—å —ç–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏—é –æ –ø—Ä–∏–∑—Ä–∞–∫–∞—Ö']
sanity = 100
collected_evidence = []
game_over = False
hunt = False
rested = False

# –ö–æ–º–Ω–∞—Ç–∞ –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∏–≥—Ä–æ–∫
current_room = random.choice(rooms)

# –°–ø–∏—Å–æ–∫ –∫–æ–º–Ω–∞—Ç –≤ –∫–æ—Ç–æ—Ä—ã–µ –∏–≥—Ä–æ–∫ –º–æ–∂–µ—Ç –ø–µ—Ä–µ–π—Ç–∏ (–∑–¥–µ—Å—å —Ç–≤–æ—Ä–∏—Ç—Å—è –∫–∞–∫–∞—è —Ç–æ –Ω–µ–æ–±—ä—è—Å–Ω–∏–º–∞—è –¥–∏—á—å!!!)
evailable_rooms = []
evailable_rooms = evailable_rooms + rooms
evailable_rooms.remove(current_room)

# –ö–æ–º–Ω–∞—Ç—ã —Å —É–∫—Ä—ã—Ç–∏–µ–º
hiding_spots = random.sample(rooms, k=3)

# –ü—Ä–∏–∑—Ä–∞–∫
ghost = random.choice(ghosts)

# –£–ª–∏–∫–∏ —Ä–∞—Å–∫–∏–¥—ã–≤–∞–µ–º –ø–æ –∫–æ–º–Ω–∞—Ç–∞–º
room_evidences = [[] for _ in range(len(rooms))]
for i in ghost_evidences[ghosts.index(ghost)]:
    room_evidences[random.randint(0, 4)].append(i)

# –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ
print(f'''–í—ã ‚Äî –æ—Ö–æ—Ç–Ω–∏–∫ –∑–∞ –ø—Ä–∏–≤–∏–¥–µ–Ω–∏—è–º–∏, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞–Ω—è–ª–∏ –ø—Ä–æ–≤–µ—Å—Ç–∏ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤ —Å—Ç–∞—Ä–æ–º –∑–∞–±—Ä–æ—à–µ–Ω–Ω–æ–º –æ—Å–æ–±–Ω—è–∫–µ.
–í –¥–æ–º–µ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç —Å—Ç—Ä–∞–Ω–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è: —Å–ª—ã—à–Ω—ã —à–∞–≥–∏, —Å–∫—Ä–∏–ø—ã, –∞ –∏–Ω–æ–≥–¥–∞ –¥–∞–∂–µ –≥–æ–ª–æ—Å–∞.
–í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî —Å–æ–±—Ä–∞—Ç—å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞, –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø –ø—Ä–∏–∑—Ä–∞–∫–∞ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–∫–∏–Ω—É—Ç—å –¥–æ–º.

–ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã: –ø—Ä–∏–∑—Ä–∞–∫ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–ø–∞—Å–µ–Ω, –∞ —É—Ä–æ–≤–µ–Ω—å –≤–∞—à–µ–≥–æ —Ä–∞—Å—Å—É–¥–∫–∞ –±—É–¥–µ—Ç –ø–∞–¥–∞—Ç—å.
–ï—Å–ª–∏ —Ä–∞—Å—Å—É–¥–æ–∫ –æ–ø—É—Å—Ç–∏—Ç—Å—è –¥–æ –Ω—É–ª—è, –≤—ã —Ä–∏—Å–∫—É–µ—Ç–µ —Å–æ–π—Ç–∏ —Å —É–º–∞ –∏–ª–∏ —Å—Ç–∞—Ç—å –∂–µ—Ä—Ç–≤–æ–π –ø—Ä–∏–∑—Ä–∞–∫–∞.''')

print('–ù–∞—á–∞—Ç—å –∏–≥—Ä—É? (–î–∞/–ù–µ—Ç)')
if input('–í–∞—à –≤—ã–±–æ—Ä: ').capitalize() == '–î–∞':
    while not game_over:
        hunt = (0 < sanity < 25)  # –§–ª–∞–≥ –æ—Ö–æ—Ç—ã
        print(f'\n–†–∞—Å—Å—É–¥–æ–∫: {sanity}', '(–ø—Ä–∏–∑—Ä–∞–∫ –ø–æ—á—É—è–ª –≤–∞—à —Å—Ç—Ä–∞—Ö üí© –∏ –Ω–∞—á–∞–ª –æ—Ö–æ—Ç—É, –±—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã!)' if hunt else '')
        print(f'–¢–µ–∫—É—â–∞—è –∫–æ–º–Ω–∞—Ç–∞: {current_room}')
        print(f'–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã: {", ".join(evailable_rooms)}')
        print(f'–ù–∞–π–¥–µ–Ω–Ω—ã–µ —É–ª–∏–∫–∏:  {", ".join(collected_evidence)}')
        print(f'–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:')
        print('\n'.join(events))

        # –ó–∞—â–∏—Ç–∞ –æ—Ç –≤–≤–æ–¥–∞ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        while True:
            action = input('–í–∞—à –≤—ã–±–æ—Ä: ')
            len_events = len(events)
            if action.isdigit():
                if int(action) in range(1, len_events + 1):
                    action = int(action)
                    break
            print(f'–í—ã–±–æ—Ä –Ω–µ–≤–µ—Ä–Ω—ã–π, –≤–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ {len_events}')
        match action:
            case 1:  # –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É
                rested = False
                if random.randint(0, 1):
                    sanity = sanity - (damage := random.randint(15, 25))
                    print(f'–í—ã —É–≤–∏–¥–µ–ª–∏ –ø–∞—Ä–∞–Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ —è–≤–ª–µ–Ω–∏–µ! –ü–æ—Ç–µ—Ä—è —Ä–∞—Å—Å—É–¥–∫–∞: {damage}')
                    if sanity <= 0:
                        print("–í—ã —á–µ —É–≥–∞—Ä–∞–µ—Ç–µ? –í –∫–∞–∫—É—é –¥—É—Ä–∫—É? *–∑–≤—É–∫–∏ —Å–∏—Ä–µ–Ω—ã*")
                        game_over = True
                else:
                    for i in room_evidences[rooms.index(current_room)]:
                        if i not in collected_evidence:
                            collected_evidence.append(i)
                            room_evidences[rooms.index(current_room)].remove(i)
                            print(f'–í—ã –Ω–∞—à–ª–∏ —É–ª–∏–∫—É: {i}')
                            break
                    else:
                        print('–£–ª–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
            case 2:  # –°–ø—Ä—è—Ç–∞—Ç—å—Å—è
                if hunt:
                    if random.randint(0, 1):
                        if current_room in hiding_spots:
                            print('–í—ã –ø–æ–ø—ã—Ç–∞–ª–∏—Å—å —Å–ø—Ä—è—Ç–∞—Ç—å—Å—è, –Ω–æ –Ω–µ—É–¥–∞—á–Ω–æ. –ü—Ä–∏–∑—Ä–∞–∫ –Ω–∞—à—ë–ª –≤–∞—Å, –∏–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!')
                        else:
                            print("–í —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç–µ –Ω–µ—Ç —É–∫—Ä—ã—Ç–∏—è. –ü—Ä–∏–∑—Ä–∞–∫ –Ω–∞—à—ë–ª –≤–∞—Å, –∏–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!")
                        game_over = True
                        break
                if current_room in hiding_spots:
                    if not rested:
                        sanity = sanity + (recovery := random.randint(5, 10))
                        if sanity > 100:
                            sanity = 100
                        rested = True
                        print(f'–í—ã –æ—Ç–¥–æ—Ö–Ω—É–ª–∏ –≤ —É–∫—Ä—ã—Ç–∏–∏. –†–∞—Å—Å—É–¥–æ–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {recovery}')
                    else:
                        print(f'–û—Ç–¥—ã—Ö–∞—Ç—å –≤ —ç—Ç–æ–º —É–∫—Ä—ã—Ç–∏–∏ —Å–ª–∏—à–∫–æ–º –æ–ø–∞—Å–Ω–æ, –Ω—É–∂–Ω–æ –ø–æ–∏—Å–∫–∞—Ç—å –¥—Ä—É–≥–æ–µ')
                else:
                    print('–í —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç–µ –Ω–µ—Ç —É–∫—Ä—ã—Ç–∏—è.')
            case 3:  # –ü–µ—Ä–µ–π—Ç–∏ –≤ –¥—Ä—É–≥—É—é –∫–æ–º–Ω–∞—Ç—É
                rested = False
                while True:
                    print('–ö—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–π—Ç–∏?')
                    target = input('–í–∞—à –≤—ã–±–æ—Ä: ').capitalize()
                    if target in evailable_rooms:
                        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–Ω–∞—Ç –≤ –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏
                        evailable_rooms.append(current_room)
                        evailable_rooms.remove(target)
                        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—Ö–æ–¥–∏–º—Å—è
                        current_room = target
                        print(f'–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –∫–æ–º–Ω–∞—Ç—É: {current_room}')
                        break
                    elif target == current_room:
                        print('–í—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç–µ')
                        break
                    else:
                        print('–ö–æ–º–Ω–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.')
            case 4:  # –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø –ø—Ä–∏–∑—Ä–∞–∫–∞
                print('''–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–∏–∑—Ä–∞–∫–∞:
- –î–∂–∏–Ω
- –ú–æ—Ä–æ–π
- –ü–æ–ª—Ç–µ—Ä–≥–µ–π—Å—Ç
- –ë–∞–Ω—à–∏
- –î–µ–º–æ–Ω''')
                choise = input("–í–∞—à –≤—ã–±–æ—Ä: ").capitalize()
                if choise in ghosts:
                    if choise == ghost:
                        print(f'–í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏ –ø—Ä–∏–∑—Ä–∞–∫–∞: {choise}! –ü–æ–±–µ–¥–∞!')
                        game_over = True
                    else:
                        print('–í—ã –æ—à–∏–±–ª–∏—Å—å! –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞.')
                        game_over = True
                else:
                    print('–¢–∞–∫–æ–≥–æ –ø—Ä–∏–∑—Ä–∞–∫–∞ –Ω–µ—Ç, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞')
            case 5:  # –ò–∑—É—á–∏—Ç—å —ç–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏—é –æ –ø—Ä–∏–∑—Ä–∞–∫–∞—Ö
                print('===–≠–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏—è –æ –ø—Ä–∏–∑—Ä–∞–∫–∞—Ö===')
                for i in range(len(ghosts)):
                    print(f'{ghosts[i]}: {", ".join(ghost_evidences[i])}')
